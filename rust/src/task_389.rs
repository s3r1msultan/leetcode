/*You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:

Input: s = "", t = "y"
Output: "y"



Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

*/
pub fn find_the_difference(s: String, t: String) -> char {
    use std::collections::HashMap;
    let mut map = HashMap::new();

    for char in s.chars() {
        *map.entry(char).or_insert(0) += 1;
    }

    for char in t.chars() {
        if map.contains_key(&char) || map[char] == 0 {
            return char;
        }
        *map.entry(char).or_insert(0) -= 1;
    }

    unreachable!()
}